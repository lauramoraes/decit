#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <errno.h>
#include <math.h>
#include <time.h>
#include <sys/types.h>
#include <sys/wait.h>

#define OK 0

typedef struct chain
{
	char *attribute;
	char *value;
	struct chain *next;
} chainType;

int main (void)
{
	FILE *xml,*xml_tmp,*arqNum;
	unsigned x,y = 0;
    unsigned aceitou = 0;
    unsigned long numInt;
	double contentLength;
	char* temp1;
	char* temp2;
	const char *length;
    char originalString[10240];
	char processedString[10240];
    char temp[10240];
    char hexa[3],num[11];
	chainType *form, *aux, *first;
	int curitiba;

    length = (const char *) malloc (sizeof(const char));
    temp1 = (char *) malloc (sizeof(char));
    temp2 = (char *) malloc (sizeof(char));
    first = (chainType *)malloc(sizeof(chainType));
    aux = (chainType *)malloc(sizeof(chainType));



    //se ponteiro devolvido eh nulo...
    if(!(length= getenv("CONTENT_LENGTH")))
    {

		printf("Content-type: text/html\n\n");
		printf("<html>\n");
		printf("<head>\n");
		printf("<title>Resultado</title>\n");
		printf("</head>\n");
		printf("<body>\n");
		printf("erro ao repassar os argumentos");
		printf("</body>\n");
		printf("</html>\n");
		exit(OK);
	}

	//converte string com o tamanho em long int
	contentLength=strtol(length, NULL, 10);
    //le linha das informacoes 1 vez com o tamanho de contentLength do stdin e armazena em originalString
    fread(originalString, contentLength, 1, stdin);

    //le char por char da url substituindo os carac especiais
	for (x = 0, y = 0; x < strlen(originalString); x++, y++)
	{
		switch (originalString[x])
		{
			/* Convert all + chars to space chars */
			case '+':
				processedString[y] = ' ';
				break;

			/* Convert all %xy hex codes into ASCII chars */
	 	    case '%':
				/* Copy the two bytes following the % */
				strncpy(hexa, &originalString[x + 1], 2);
				/* Skip over the hex */
				x = x + 2;
				/* Convert the hex to ASCII */
				/* Prevent user from altering URL delimiter sequence */
				if( ((strcmp(hexa,"26")==0)) || ((strcmp(hexa,"3D")==0)) )
				{
					processedString[y]='%';
					y++;
					strcpy(processedString,hexa);
					y+=2;
					break;
				}
				processedString[y] = (char)strtol(hexa, NULL, 16);
				break;

			/* Make an exact copy of anything else */
			 default:
				processedString[y] = originalString[x];
				break;
		}
	}

	temp1 = (char *)&processedString;
	aux=NULL;

	for (temp2=strsep(&temp1,"&"); temp2!=NULL; temp2=strsep(&temp1,"&"))
	{
		form = (chainType *)malloc(sizeof(chainType));
		form->attribute=strsep(&temp2,"=");
		form->value=strsep(&temp2,"\0");

        if(strcmp(form->attribute,"situacao")==OK) {
            if(strcmp(form->value,"aceitou")==OK)  aceitou=1;
            else aceitou=2;
        }

		if (aux == NULL)
			first = form;
		else
			aux->next = form;

		aux = form;
	}

    form->next = NULL;
	if(!form)
	{
		printf("Content-type: text/html\n\n");
		printf("<html>\n");
		printf("<head>\n");
		printf("<title>Resultado</title>\n");
		printf("</head>\n");
		printf("<body>\n");
		printf("erro");
		printf("</body>\n");
		exit(OK);
	}

	/////////////////////////
	//inicio escrita do xml//
	/////////////////////////
    if(aceitou==1)
    {
      //////////////////////////////////////////////////
	  //recupero informacao do numero do questionario //
      //////////////////////////////////////////////////
      if ((arqNum=fopen("../numero/number.txt", "r")) == NULL)
	  {
          arqNum = fopen("../numero/number.txt", "w");
          fprintf(arqNum,"1");
          fclose(arqNum);
          strcpy(num,"0");
      }
      else
      {
   	      fgets(num,10,arqNum);
          fclose(arqNum);
       	  numInt = strtoul(num,NULL,10);
          numInt++;
          sprintf(temp,"%lu",numInt);
          arqNum = fopen("../numero/number.txt", "w");
          fprintf(arqNum,temp);
          fclose(arqNum);
      }
      //////////////////////////////////////////////////
      
      if ((xml=fopen("../xml/pacientes.xml", "r")) == NULL)
	  {
		xml = fopen("../xml/pacientes.xml", "w");
		fprintf(xml, "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n");
		fprintf(xml, "<?xml-stylesheet type=\"text/xsl\" href=\"pacientes.xsl\"?>\n");
		fprintf(xml, "<doc>\n");
		fprintf(xml, "    <paciente>\n");
        fprintf(xml, "      <numero>%s</numero>\n",num);
        for (aux=first; aux!=NULL; aux=aux->next)
		{
            if(strcmp(aux->attribute,"cidade") == OK)
            {
                if(!strcmp(aux->value,"1"))
		{
		   curitiba = 1;
		   fprintf(xml, "      <%s>Curitiba/Paraná</%s>\n",aux->attribute,aux->attribute);
		}
		else
		   curitiba = 0;
                if(!strcmp(aux->value,"2"))  fprintf(xml, "      <%s>Fortaleza/Ceará</%s>\n",aux->attribute,aux->attribute);
                if(!strcmp(aux->value,"3"))  fprintf(xml, "      <%s>Itaboraí/RJ</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"unidade") == OK)
            {
               if(!strcmp(aux->value,"1"))  fprintf(xml, "      <%s>Programa Saúde Família</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"2"))  fprintf(xml, "      <%s>Unidade Básica de Saúde</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"3"))  fprintf(xml, "      <%s>Ambulatório - Posto de Saúde</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"4"))  fprintf(xml, "      <%s>Unid Pronto Atendimento/Urgência/Emergência</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"5"))  fprintf(xml, "      <%s>Unidade Hospitalar</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"6"))  {
                       fprintf(xml, "      <%s>%s</%s>\n",aux->attribute,aux->next->value,aux->attribute);
                       aux=aux->next;
               }
            }
            if(strcmp(aux->attribute,"tipo") == OK)
            {
               if(!strcmp(aux->value,"1"))  fprintf(xml_tmp, "      <%s>Contato</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"2"))  fprintf(xml_tmp, "      <%s>Sintomático Respiratório</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"3"))  fprintf(xml_tmp, "      <%s>Caso Suspeito de Tuberculose</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"4"))  {
                       fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->next->value,aux->attribute);
                       aux=aux->next;
               }
            }
            if(strcmp(aux->attribute,"entrevistador") == OK)  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
	    if(strcmp(aux->attribute,"categProf") == OK)  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(strcmp(aux->attribute,"diaEntr") == OK)
            {
               fprintf(xml_tmp, "      <%s>%s/%s/%s</%s>\n",aux->attribute,aux->value,aux->next->value,aux->next->next->value,aux->attribute);
               aux = aux->next->next;
            }
            if(strcmp(aux->attribute,"local") == OK)  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(strcmp(aux->attribute,"supervisor") == OK)  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(strcmp(aux->attribute,"dia") == OK)
            {
               fprintf(xml_tmp, "      <%s>%s/%s/%s</%s>\n",aux->attribute,aux->value,aux->next->value,aux->next->next->value,aux->attribute);
               aux = aux->next->next;
            }
            if(strcmp(aux->attribute,"horaInicio") == OK)
            {
               fprintf(xml_tmp, "      <%s>%s:%s</%s>\n",aux->attribute,aux->value,aux->next->value,aux->attribute);
               aux = aux->next;
            }
		}
	    if(!strcmp(aux->attribute,"nome"))        fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(!strcmp(aux->attribute,"logradouro"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(!strcmp(aux->attribute,"numero"))      fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(!strcmp(aux->attribute,"est"))      fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(!strcmp(aux->attribute,"município"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(!strcmp(aux->attribute,"bairro"))      fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(!strcmp(aux->attribute,"cep"))         fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(!strcmp(aux->attribute,"telefone"))    fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
	    if (curitiba != 1)
            	if(!strcmp(aux->attribute,"numfns"))      fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(!strcmp(aux->attribute,"diaNasc"))
            {
               fprintf(xml_tmp, "      <%s>%s/%s/%s</%s>\n",aux->attribute,aux->value,aux->next->value,aux->next->next->value,aux->attribute);
               aux = aux->next->next;
            }
            if(strcmp(aux->attribute,"sexo") == OK)
            {
               if(!strcmp(aux->value,"masculino"))  fprintf(xml_tmp, "      <%s>Masculino</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"feminino"))   fprintf(xml_tmp, "      <%s>Feminino</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"cor") == OK)
            {
               if(!strcmp(aux->value,"branca"))   fprintf(xml_tmp, "      <%s>Branca</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"negro"))    fprintf(xml_tmp, "      <%s>Negra/Parda</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"amarela"))  fprintf(xml_tmp, "      <%s>Amarela/Oriental</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"indigena")) fprintf(xml_tmp, "      <%s>Vermelho/Indígena</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"outra"))  {
                       fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->next->value,aux->attribute);
                       aux=aux->next;
               }
            }
            if(strcmp(aux->attribute,"estciv") == OK)
            {
               if(!strcmp(aux->value,"solteiro"))   fprintf(xml_tmp, "      <%s>Solteiro</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"casado"))     fprintf(xml_tmp, "      <%s>Casado</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"amigado"))    fprintf(xml_tmp, "      <%s>Junto/amigado</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"divorciado")) fprintf(xml_tmp, "      <%s>Divorciado</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"separado"))   fprintf(xml_tmp, "      <%s>Desquitado/separado</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"viuvo"))      fprintf(xml_tmp, "      <%s>Viúvo</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"outras"))     fprintf(xml_tmp, "      <%s>Outras</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"semresp"))    fprintf(xml_tmp, "      <%s>Não respondeu</%s>\n",aux->attribute,aux->attribute);
            }
            if(!strcmp(aux->attribute,"natest"))    fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(!strcmp(aux->attribute,"natmun"))    fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(strcmp(aux->attribute,"morout") == OK)
            {
               if(!strcmp(aux->value,"nao"))   fprintf(xml_tmp, "      <%s>Não</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"sim"))  {
                       fprintf(xml_tmp, "      <%s>%s,%s</%s>\n",aux->attribute,aux->next->next->value,aux->next->value,aux->attribute);
                       aux=aux->next;
               }
            }
            if(strcmp(aux->attribute,"funcao") == OK)
            {
               if(!strcmp(aux->value,"0"))   fprintf(xml_tmp, "      <%s>Não se aplica</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"1"))   fprintf(xml_tmp, "      <%s>Empregado</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"2"))   fprintf(xml_tmp, "      <%s>Desempregado</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"3"))   fprintf(xml_tmp, "      <%s>Autônomo, trabalha por conta própria</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"4"))   fprintf(xml_tmp, "      <%s>Empregador</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"5"))   fprintf(xml_tmp, "      <%s>Dono de negócio familiar (não tem empregados)</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"6"))   fprintf(xml_tmp, "      <%s>Fazendo bicos</%s>\n",aux->attribute,aux->attribute);
	       if(!strcmp(aux->value,"7"))   fprintf(xml_tmp, "      <%s>Do lar</%s>\n",aux->attribute,aux->attribute);
	       if(!strcmp(aux->value,"8"))   fprintf(xml_tmp, "      <%s>Aposentado</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"9"))   fprintf(xml_tmp, "      <%s>Não sabe informar</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"10"))   fprintf(xml_tmp, "      <%s>Não quer informar</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"outros"))  {
                    fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->next->value,aux->attribute);
                    aux=aux->next;
               }
            }
            if(strcmp(aux->attribute,"profsaude") == OK)
            {
               if(!strcmp(aux->value,"sim"))   fprintf(xml_tmp, "      <%s>Sim</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"nao"))     fprintf(xml_tmp, "      <%s>Não</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"semResp"))    fprintf(xml_tmp, "      <%s>Não respondeu</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"grinstrch") == OK)
            {
               if(!strcmp(aux->value,"escola"))    fprintf(xml_tmp, "      <%s>Não freqüentei a escola</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"priInc"))    fprintf(xml_tmp, "      <%s>Pimário incompleto</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"priCompl"))  fprintf(xml_tmp, "      <%s>Primário completo/Ginásio Incompleto</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"ginComp"))   fprintf(xml_tmp, "      <%s>Ginásio completo/Segundo grau incompleto</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"segComp"))   fprintf(xml_tmp, "      <%s>Segundo grau completo/Superior Incompleto</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"supComp"))   fprintf(xml_tmp, "      <%s>Superior completo</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"posGrad"))   fprintf(xml_tmp, "      <%s>Pós-graduação</%s>\n",aux->attribute,aux->attribute);
	       if(!strcmp(aux->value,"naoSabe"))   fprintf(xml_tmp, "      <%s>Não sabe informar</%s>\n",aux->attribute,aux->attribute);
	       if(!strcmp(aux->value,"semResp"))   fprintf(xml_tmp, "      <%s>Sem resposta</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"empregada") == OK)
            {
               if(!strcmp(aux->value,"0"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"1"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"2"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"3"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"4+"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NS"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NR"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            }

            if(strcmp(aux->attribute,"auto") == OK)
            {
               if(!strcmp(aux->value,"0"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"1"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"2"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"3"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"4+"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NS"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NR"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            }
            if(strcmp(aux->attribute,"banhei") == OK)
            {
               if(!strcmp(aux->value,"0"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"1"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"2"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"3"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"4+"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NS"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NR"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            }
            if(strcmp(aux->attribute,"freezer") == OK)
            {
               if(!strcmp(aux->value,"0"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"1"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"2"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"3"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"4+"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NS"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NR"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            }
            if(strcmp(aux->attribute,"gel") == OK)
            {
               if(!strcmp(aux->value,"0"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"1"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"2"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"3"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"4+"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NS"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NR"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            }

            if(strcmp(aux->attribute,"mlav") == OK)
            {
               if(!strcmp(aux->value,"0"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"1"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"2"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"3"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"4+"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NS"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NR"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            }
            if(strcmp(aux->attribute,"rad") == OK)
            {
               if(!strcmp(aux->value,"0"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"1"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"2"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"3"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"4+"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NS"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NR"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            }
            if(strcmp(aux->attribute,"tv") == OK)
            {
               if(!strcmp(aux->value,"0"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"1"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"2"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"3"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"4+"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NS"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NR"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            }
            if(strcmp(aux->attribute,"video") == OK)
            {
               if(!strcmp(aux->value,"0"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"1"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"2"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"3"))   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"4+"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NS"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               if(!strcmp(aux->value,"NR"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            }
            if(strcmp(aux->attribute,"morrua") == OK)
            {
               if(!strcmp(aux->value,"sim"))  fprintf(xml_tmp, "      <%s>Sim</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"nao"))  fprintf(xml_tmp, "      <%s>Não</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"morasil") == OK)
            {
               if(!strcmp(aux->value,"sim"))  fprintf(xml_tmp, "      <%s>Sim</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"nao"))  fprintf(xml_tmp, "      <%s>Não</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"presid") == OK)
            {
               if(!strcmp(aux->value,"sim"))  fprintf(xml_tmp, "      <%s>Sim</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"nao"))  fprintf(xml_tmp, "      <%s>Não</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"intern") == OK)
            {
               if(!strcmp(aux->value,"sim"))  fprintf(xml_tmp, "      <%s>Sim</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"nao"))  fprintf(xml_tmp, "      <%s>Não</%s>\n",aux->attribute,aux->attribute);
            }
	    if(strcmp(aux->attribute,"qunis") == OK)
            {
               if(!strcmp(aux->value,"1"))   fprintf(xml_tmp, "      <%s>Ambulatório de hospital público</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"2"))   fprintf(xml_tmp, "      <%s>Ambulatório de hospital privado</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"3"))   fprintf(xml_tmp, "      <%s>Emergência de hospital público</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"4"))  fprintf(xml_tmp, "      <%s>Emergência de hospital privado</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"outro"))  fprintf(xml_tmp, "      <%s>Outro</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"ignorado"))  fprintf(xml_tmp, "      <%s>Ignorado</%s>\n",aux->attribute,aux->attribute);
            }
	    if(strcmp(aux->attribute,"agens") == OK)
            {
               if(!strcmp(aux->value,"sim"))  fprintf(xml_tmp, "      <%s>Sim</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"nao"))  fprintf(xml_tmp, "      <%s>Não</%s>\n",aux->attribute,aux->attribute);
	       if(!strcmp(aux->value,"naoAplica"))  fprintf(xml_tmp, "      <%s>Não se aplica</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"fumo") == OK)
            {
               if(!strcmp(aux->value,"jamais"))    fprintf(xml_tmp, "      <%s>Jamais fumante</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"exfum"))   {
                     fprintf(xml_tmp, "      <%s>Ex-fumante</%s>\n",aux->attribute,aux->attribute);
                     aux=aux->next;   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
                     aux=aux->next;   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
                     aux=aux->next;   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
		     aux=aux->next;   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
                     aux=aux->next;   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
                     aux=aux->next;   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               }
               if(!strcmp(aux->value,"fumatual"))   {
                     fprintf(xml_tmp, "      <%s>Fumante atual</%s>\n",aux->attribute,aux->attribute);
                     aux=aux->next;   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
                     aux=aux->next;   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
                     aux=aux->next;   fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
               }
               if(!strcmp(aux->value,"ignorado"))  fprintf(xml_tmp, "      <%s>Ignorado</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"drogas") == OK)
            {
               if(!strcmp(aux->value,"sim"))    fprintf(xml_tmp, "      <%s>Sim</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"nao"))    fprintf(xml_tmp, "      <%s>Não</%s>\n",aux->attribute,aux->attribute);
	       if(!strcmp(aux->value,"semResp"))    fprintf(xml_tmp, "      <%s>Sem resposta</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"alcool") == OK)
            {
               if(!strcmp(aux->value,"nenhuma"))   fprintf(xml_tmp, "      <%s>Nenhuma</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"cerveja"))    fprintf(xml_tmp, "      <%s>Cerveja</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"vinho"))  fprintf(xml_tmp, "      <%s>Vinho</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"whisky")) fprintf(xml_tmp, "      <%s>Whisky</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"cachaca")) fprintf(xml_tmp, "      <%s>Cachaça</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"outra"))  {
                       fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->next->value,aux->attribute);
                       aux=aux->next;
               }
            }
            if(!strcmp(aux->attribute,"observacoes"))  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
        fprintf(xml, "    <continua>%s</continua>\n",num);
        fprintf(xml, "    </paciente>\n");
		fprintf(xml, "</doc>");
		fclose(xml);
	  }
	  else
	  {
        xml_tmp = fopen("../xml/temp.xml", "w");
		fgets(temp, 1024, xml);
		while(strcmp(temp, "</doc>") != 0)
		{
			fputs(temp, xml_tmp);
			fgets(temp, 1024, xml);
		}
		fprintf(xml_tmp, "    <paciente>\n");
        fprintf(xml_tmp, "      <numero>%s</numero>\n",num);
        for (aux=first; aux!=NULL; aux=aux->next)
		{
            if(strcmp(aux->attribute,"cidade") == OK)
            {
                if(!strcmp(aux->value,"1"))  fprintf(xml_tmp, "      <%s>Curitiba/Paraná</%s>\n",aux->attribute,aux->attribute);
                if(!strcmp(aux->value,"2"))  fprintf(xml_tmp, "      <%s>Fortaleza/Ceará</%s>\n",aux->attribute,aux->attribute);
                if(!strcmp(aux->value,"3"))  fprintf(xml_tmp, "      <%s>Itaboraí/RJ</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"unidade") == OK)
            {
               if(!strcmp(aux->value,"1"))  fprintf(xml_tmp, "      <%s>Programa Saúde Família</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"2"))  fprintf(xml_tmp, "      <%s>Unidade Básica de Saúde</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"3"))  fprintf(xml_tmp, "      <%s>Unid Pronto Atendimento/Urgência/Emergência</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"4"))  fprintf(xml_tmp, "      <%s>Unidade Hospitalar</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"5"))  {
                       fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->next->value,aux->attribute);
                       aux=aux->next;
               }
            }
            if(strcmp(aux->attribute,"tipo") == OK)
            {
               if(!strcmp(aux->value,"1"))  fprintf(xml_tmp, "      <%s>Contato</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"2"))  fprintf(xml_tmp, "      <%s>Sintomático Respiratório</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"3"))  fprintf(xml_tmp, "      <%s>Caso Suspeito de Tuberculose</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"4"))  {
                       fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->next->value,aux->attribute);
                       aux=aux->next;
               }
            }
            if(strcmp(aux->attribute,"entrevistador") == OK)  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(strcmp(aux->attribute,"diaEntr") == OK)
            {
               fprintf(xml_tmp, "      <%s>%s/%s/%s</%s>\n",aux->attribute,aux->value,aux->next->value,aux->next->next->value,aux->attribute);
               aux = aux->next->next;
            }
            if(strcmp(aux->attribute,"local") == OK)  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(strcmp(aux->attribute,"supervisor") == OK)  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(strcmp(aux->attribute,"dia") == OK)
            {
               fprintf(xml_tmp, "      <%s>%s/%s/%s</%s>\n",aux->attribute,aux->value,aux->next->value,aux->next->next->value,aux->attribute);
               aux = aux->next->next;
            }
            if(strcmp(aux->attribute,"horaInicio") == OK)
            {
               fprintf(xml_tmp, "      <%s>%s:%s</%s>\n",aux->attribute,aux->value,aux->next->value,aux->attribute);
               aux = aux->next;
            }
		}
        fprintf(xml_tmp, "    <continua>%s</continua>\n",num);
        fprintf(xml_tmp, "    </paciente>\n");
		fprintf(xml_tmp, "</doc>");
		fclose(xml);
		fclose(xml_tmp);
		remove("../xml/pacientes.xml");
        rename("../xml/temp.xml","../xml/pacientes.xml");
	  }
    }
    //se recusou...
    else
    {
      if ((xml=fopen("../xml/recusa.xml", "r")) == NULL)
	  {
        xml = fopen("../xml/recusa.xml", "w");
		fprintf(xml, "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n");
		fprintf(xml, "<?xml-stylesheet type=\"text/xsl\" href=\"recusa.xsl\"?>\n");
		fprintf(xml, "<doc>\n");
		fprintf(xml, "    <paciente>\n");
		for (aux=first; aux!=NULL; aux=aux->next)
		{
            if(strcmp(aux->attribute,"cidade") == OK)
            {
                if(!strcmp(aux->value,"1"))  fprintf(xml, "      <%s>Curitiba/Paraná</%s>\n",aux->attribute,aux->attribute);
                if(!strcmp(aux->value,"2"))  fprintf(xml, "      <%s>Fortaleza/Ceará</%s>\n",aux->attribute,aux->attribute);
                if(!strcmp(aux->value,"3"))  fprintf(xml, "      <%s>Itaboraí/RJ</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"unidade") == OK)
            {
               if(!strcmp(aux->value,"1")) fprintf(xml, "      <%s>Programa Saúde Família</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"2")) fprintf(xml, "      <%s>Unidade Básica de Saúde</%s>\n",aux->attribute,aux->attribute);
	       if(!strcmp(aux->value,"3"))  fprintf(xml, "      <%s>Ambulatório - Posto de Saúde</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"4"))  fprintf(xml, "      <%s>Unid Pronto Atendimento/Urgência/Emergência</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"5"))  fprintf(xml, "      <%s>Unidade Hospitalar</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"6"))  {
                       fprintf(xml, "      <%s>%s</%s>\n",aux->attribute,aux->next->value,aux->attribute);
                       aux=aux->next;
               }
            }
            if(strcmp(aux->attribute,"recusa") == OK)
            {
               if(!strcmp(aux->value,"contato"))  fprintf(xml, "      <%s>Contato</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"suspeito")) fprintf(xml, "      <%s>Suspeito</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"sinresp"))  fprintf(xml, "      <%s>Sintomático Respiratório</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"idade") == OK)  fprintf(xml, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(strcmp(aux->attribute,"sexo") == OK) {
               if(!strcmp(aux->value,"f"))  fprintf(xml, "      <%s>F</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"m"))  fprintf(xml, "      <%s>M</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"tem") == OK) {
               if(!strcmp(aux->value,"sim"))  fprintf(xml, "      <%s>S</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"nao"))  fprintf(xml, "      <%s>N</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"motivo") == OK)  fprintf(xml, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
     	}
        fprintf(xml, "    </paciente>\n");
		fprintf(xml, "</doc>");
		fclose(xml);
      }
      else
      {
        xml_tmp = fopen("../xml/tempr.xml", "w");
		fgets(temp, 1024, xml);
		while(strcmp(temp, "</doc>") != 0)
		{
			fputs(temp, xml_tmp);
			fgets(temp, 1024, xml);
		}
        fprintf(xml_tmp, "    <paciente>\n");
		for (aux=first; aux!=NULL; aux=aux->next)
		{
            if(strcmp(aux->attribute,"cidade") == OK)
            {
                if(!strcmp(aux->value,"1"))  fprintf(xml_tmp, "      <%s>Curitiba/Paraná</%s>\n",aux->attribute,aux->attribute);
                if(!strcmp(aux->value,"2"))  fprintf(xml_tmp, "      <%s>Fortaleza/Ceará</%s>\n",aux->attribute,aux->attribute);
                if(!strcmp(aux->value,"3"))  fprintf(xml_tmp, "      <%s>Itaboraí/RJ</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"unidade") == OK)
            {
               if(!strcmp(aux->value,"1"))  fprintf(xml_tmp, "      <%s>Programa Saúde Família</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"2"))  fprintf(xml_tmp, "      <%s>Unidade Básica de Saúde</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"3"))  fprintf(xml, "      <%s>Ambulatório - Posto de Saúde</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"4"))  fprintf(xml, "      <%s>Unid Pronto Atendimento/Urgência/Emergência</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"5"))  fprintf(xml, "      <%s>Unidade Hospitalar</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"6"))  {
                       fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->next->value,aux->attribute);
                       aux=aux->next;
               }
            }
            if(strcmp(aux->attribute,"recusa") == OK)
            {
               if(!strcmp(aux->value,"contato"))  fprintf(xml_tmp, "      <%s>Contato</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"suspeito")) fprintf(xml_tmp, "      <%s>Suspeito</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"sinresp"))  fprintf(xml_tmp, "      <%s>Sintomático Respiratório</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"idade") == OK)  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);
            if(strcmp(aux->attribute,"sexo") == OK) {
               if(!strcmp(aux->value,"f"))  fprintf(xml_tmp, "      <%s>F</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"m"))  fprintf(xml_tmp, "      <%s>M</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"tem") == OK) {
               if(!strcmp(aux->value,"sim"))  fprintf(xml_tmp, "      <%s>S</%s>\n",aux->attribute,aux->attribute);
               if(!strcmp(aux->value,"nao"))  fprintf(xml_tmp, "      <%s>N</%s>\n",aux->attribute,aux->attribute);
            }
            if(strcmp(aux->attribute,"motivo") == OK)  fprintf(xml_tmp, "      <%s>%s</%s>\n",aux->attribute,aux->value,aux->attribute);

		}
        fprintf(xml_tmp, "    </paciente>\n");
		fprintf(xml_tmp, "</doc>");
        fclose(xml);
		fclose(xml_tmp);
		remove("../xml/recusa.xml");
        rename("../xml/tempr.xml","../xml/recusa.xml");
      }
    }

    //inicializa html
    if(aceitou==1)
    {
         printf("Content-type: text/html\n\n");
         printf("<html>\n");
	     printf("<head>\n");
	     printf("<title></title>\n");
	     printf("</head>\n");
	     printf("<body>");
	     printf("Dados adicionados com sucesso!\n");
	     //printf("<body onload=\"location='../form1.php?num=%s'\">\n",num);
         //printf("<input type=\"hidden\" name=\"num\" value=\"%s\">\n",num);
         printf("</body>\n");
	     printf("</html>");
    }
    else
    {    printf("Content-type: text/html\n\n");
         printf("<html>\n");
	     printf("<head>\n");
	     printf("<title></title>\n");
	     printf("</head>\n");
	     printf("<body bgcolor=\"EEEEEE\">\n");
	     printf("<div align=center><a href=\"../form0.html\">Iniciar outro formulario</a></div><br><br>\n");

         printf("<script type=\"text/javascript\">\n");

	     // Load XML
	     printf("var xml = new ActiveXObject(\"Microsoft.XMLDOM\");\n");
	     printf("xml.async = false;\n");
	     printf("xml.load(\"../xml/recusa.xml\");\n");

	     // Load XSL
	     printf("var xsl = new ActiveXObject(\"Microsoft.XMLDOM\");\n");
	     printf("xsl.async = false;\n");
	     printf("xsl.load(\"../xml/recusa.xsl\");\n");

	     // Transform
	     printf("document.write(xml.transformNode(xsl));\n");
	     printf("</script>\n");

         printf("</body>\n");
	     printf("</html>");
    
    }

    //liberar memoria
    for (aux=form=first; aux!=NULL; form=aux)
	{
		aux = form->next;
		free (form);
	}

	exit(OK);
}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

